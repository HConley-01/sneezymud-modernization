#pragma once

/* Some different kind of liquids */
enum liqTypeT {
  LIQ_NONE = -1,
  LIQ_WATER,  // 0
  LIQ_BEER,
  LIQ_WINE,
  LIQ_ALE,
  LIQ_DARKALE,
  LIQ_WHISKY,  // 5
  LIQ_LEMONADE,
  LIQ_FIREBRT,
  LIQ_LOCALSPC,
  LIQ_SLIME,
  LIQ_MILK,  // 10
  LIQ_TEA,
  LIQ_COFFEE,
  LIQ_BLOOD,
  LIQ_SALTWATER,
  LIQ_MEAD,  // 15
  LIQ_VODKA,
  LIQ_RUM,
  LIQ_BRANDY,
  LIQ_RED_WINE,
  LIQ_WARM_MEAD,  // 20
  LIQ_CHAMPAGNE,
  LIQ_HOLYWATER,
  LIQ_PORT,
  LIQ_MUSHROOM_ALE,
  LIQ_VOMIT,  // 25
  LIQ_COLA,
  LIQ_STRAWBERRY_MARGARITA,
  LIQ_BLUE_MARGARITA,
  LIQ_GOLD_MARGARITA,
  LIQ_STRAWBERRY_DAIQUIRI,  // 30
  LIQ_BANANA_DAIQUIRI,
  LIQ_PINA_COLADA,
  LIQ_TEQUILA_SUNRISE,
  LIQ_ISLA_VERDE,
  LIQ_POT_CURE_POISON,  // 35
  LIQ_POT_HEAL_LIGHT,
  LIQ_POT_HEAL_CRIT,
  LIQ_POT_HEAL,
  LIQ_POT_SANCTUARY,
  LIQ_POT_FLIGHT,  // 40
  LIQ_POT_BIND,
  LIQ_POT_BLINDNESS,
  LIQ_POT_ARMOR,
  LIQ_POT_REFRESH,
  LIQ_POT_SECOND_WIND,  // 45
  LIQ_POT_CURSE,
  LIQ_POT_DETECT_INVIS,
  LIQ_POT_BLESS,
  LIQ_POT_INVIS,
  LIQ_POT_HEAL_FULL,  // 50
  LIQ_POT_SUFFOCATE,
  LIQ_POT_FEATHERY_DESCENT,
  LIQ_POT_DETECT_MAGIC,
  LIQ_POT_DISPEL_MAGIC,
  LIQ_POT_STONE_SKIN,  // 55
  LIQ_POT_TRAIL_SEEK,
  LIQ_POT_FAERIE_FIRE,
  LIQ_POT_FLAMING_FLESH,
  LIQ_POT_CONJURE_ELE_EARTH,
  LIQ_POT_SENSE_LIFE,  // 60
  LIQ_POT_STEALTH,
  LIQ_POT_TRUE_SIGHT,
  LIQ_POT_ACCELERATE,
  LIQ_POT_INFRAVISION,
  LIQ_POT_SORC_GLOBE,  // 65
  LIQ_POT_POISON,
  LIQ_POT_BONE_BREAKER,
  LIQ_POT_AQUALUNG,
  LIQ_POT_HASTE,
  LIQ_POT_TELEPORT,  // 70
  LIQ_POT_GILLS_OF_FLESH,
  LIQ_POT_CURE_BLINDNESS,
  LIQ_POT_CURE_DISEASE,
  LIQ_POT_SHIELD_OF_MISTS,
  LIQ_POT_SENSE_PRESENCE,  // 75
  LIQ_POT_CHEVAL,
  LIQ_POT_DJALLAS_PROTECTION,
  LIQ_POT_LEGBAS_GUIDANCE,
  LIQ_POT_DETECT_SHADOW,
  LIQ_POT_CELERITE,  // 80
  LIQ_POT_CLARITY,
  LIQ_POT_BOILING_BLOOD,
  LIQ_POT_STUPIDITY,
  LIQ_POT_SLUMBER,
  LIQ_POT_HEAL2,  // 85
  LIQ_POT_FEATHERY_DESCENT2,
  LIQ_POT_SANCTUARY2,
  LIQ_POT_STONE_SKIN2,
  LIQ_POT_INFRAVISION2,
  LIQ_POT_HEAL_LIGHT2,  // 90
  LIQ_POT_GILLS_OF_FLESH2,
  LIQ_POT_CELERITE2,
  LIQ_POT_CELERITE3,
  LIQ_POT_TELEPORT2,
  LIQ_POT_BLESS2,  // 95
  LIQ_POT_SECOND_WIND2,
  LIQ_POT_MULTI1,
  LIQ_POT_MULTI2,
  LIQ_POT_MULTI3,
  LIQ_POT_MULTI4,  // 100
  LIQ_POT_MULTI5,
  LIQ_POT_MULTI6,
  LIQ_POT_MULTI7,
  LIQ_POT_MULTI8,
  LIQ_POT_MULTI9,  // 105
  LIQ_POT_MULTI10,
  LIQ_POT_MULTI11,
  LIQ_POT_YOUTH,
  LIQ_POT_STAT,
  LIQ_POT_LEARNING,  // 110
  LIQ_POISON_STANDARD,
  LIQ_POISON_CAMAS,
  LIQ_POISON_ANGEL,
  LIQ_POISON_JIMSON,
  LIQ_POISON_HEMLOCK,  // 115
  LIQ_POISON_MONKSHOOD,
  LIQ_POISON_GLOW_FISH,
  LIQ_POISON_SCORPION,
  LIQ_POISON_VIOLET_FUNGUS,
  LIQ_POISON_DEVIL_ICE,  // 120
  LIQ_POISON_FIREDRAKE,
  LIQ_POISON_INFANT,
  LIQ_POISON_PEA_SEED,
  LIQ_POISON_ACACIA,
  LIQ_LUBRICATION,  // 125
  LIQ_MAGICAL_ELIXIR,
  LIQ_URINE,
  LIQ_POT_HEALING_GRASP,
  LIQ_POT_CLEANSE,
  LIQ_POT_QUICKSILVER,  // 130
  LIQ_POT_MYSTERY,
  LIQ_MUD,
  LIQ_TEQUILA,
  LIQ_POT_ENLIVEN,
  LIQ_POT_PLASMA_MIRROR,  // 135
  LIQ_POT_FILTH,
  LIQ_GUANO,
  MAX_DRINK_TYPES  // move and change
};
extern liqTypeT& operator++(liqTypeT&, int);
inline constexpr liqTypeT MIN_DRINK_TYPES = static_cast<liqTypeT>(0);

// this contains data for a single liquid type
// meant to be used as an element in a list of types
class liqEntry {
  public:
    int drunk;
    int hunger;
    int thirst;
    bool potion;
    bool poison;
    const char* color;
    const char* name;
    int price;

    liqEntry(int, int, int, bool, bool, const char*, const char*, int);

  private:
    liqEntry();  // deny usage in this format
};

// this is a container class for a list of liquid types
class liqInfoT_pimpl;
class liqInfoT {
    liqInfoT_pimpl* pimpl;

  public:
    const liqEntry* operator[](const liqTypeT) const;

    liqInfoT();
    ~liqInfoT();
};

extern liqInfoT liquidInfo;
